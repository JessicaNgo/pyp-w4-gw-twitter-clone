{"filter":false,"title":"main.py","tooltip":"/twitter_clone/main.py","undoManager":{"mark":2,"position":2,"stack":[[{"start":{"row":71,"column":0},"end":{"row":71,"column":2},"action":"insert","lines":["# "],"id":6636}],[{"start":{"row":13,"column":0},"end":{"row":22,"column":0},"action":"remove","lines":["def _hash_password(password):","    \"\"\"","    Uses md5 hashing for now","    \"\"\"","    return md5(password.encode(\"utf-8\").hexdigest())","    ","#def _collect_tweet(user_id):","#    ","",""],"id":6643,"ignore":true},{"start":{"row":27,"column":0},"end":{"row":95,"column":13},"action":"remove","lines":["#to add our current directory to pythonpath","#PYTHONPATH=. python twitter_clone/runserver.py","","# implement your views here","@app.route(\"/login/\", methods = [\"GET\", \"POST\"])","def login():","    \"\"\"","    Log in page","    \"\"\"","    if request.method == 'GET':","        return render_template('login.html')","    ","    elif request.method == \"POST\":","        ","        username = request.form[\"username\"]","        password = request.form[\"password\"]","        #hashedPassword = _hash_password(password)","","        #cursor = g.db.cursor()","        #Parametetrize SQL queries to prevent sql injection","        try:","            query = \"SELECT id from user WHERE username = ? AND password = ?\"","            cursor = g.db.execute(query, (username, password))","            #cursor = g.db.execute(query, (username, hashedPassword))","            results = cursor.fetchall()","            user_id = results[0][0] # <------","            session[\"logged_in\"] = True","            session[\"user_id\"] = user_id","            session[\"username\"] = username","            return redirect(\"/own_feed/\")","            #return \"your user id is {}\".format(id)","        except:","            return redirect(\"/login/\")","            # return \"you are wrong {}\".format(results)","","# @login_required","@app.route(\"/own_feed/\", methods = [\"GET\", \"POST\"])","def own_feed():","    if request.method == 'GET':","        query = \"SELECT id, created, content FROM tweet WHERE user_id = ? ORDER BY created desc\"","        cursor = g.db.execute(query, (session['user_id'],))","        tweets = _retrieve_tweets(session['user_id'])","        return render_template('own_feed.html', tweets=tweets)","","def _retrieve_tweets(user_id):","    query = \"SELECT id, created, content FROM tweet WHERE user_id = ? ORDER BY created desc\"","    cursor = g.db.execute(query, (user_id,))","    tweets = [dict(user_id = row[0], created = row[1], content = row[2]) for row in cursor.fetchall()]","    return tweets","    ","@app.route(\"/other_feed/\", methods = ['GET', 'POST'])","def other_feed():","    if request.method == 'GET':","        return render_template('other_feed.html')","    ","@app.route(\"/logout/\")","def logout():","    session.pop","    ","","","@app.route('/')","#@login_required()","def homepage():","    return \"Hello world\"","","","if __name__ == \"__main__\":","    app.run()"]},{"start":{"row":27,"column":0},"end":{"row":29,"column":0},"action":"insert","lines":["","# implement your views here",""]}],[{"start":{"row":13,"column":0},"end":{"row":22,"column":0},"action":"insert","lines":["def _hash_password(password):","    \"\"\"","    Uses md5 hashing for now","    \"\"\"","    return md5(password.encode(\"utf-8\").hexdigest())","    ","#def _collect_tweet(user_id):","#    ","",""],"id":6644,"ignore":true},{"start":{"row":36,"column":0},"end":{"row":38,"column":0},"action":"remove","lines":["","# implement your views here",""]},{"start":{"row":36,"column":0},"end":{"row":104,"column":13},"action":"insert","lines":["#to add our current directory to pythonpath","#PYTHONPATH=. python twitter_clone/runserver.py","","# implement your views here","@app.route(\"/login/\", methods = [\"GET\", \"POST\"])","def login():","    \"\"\"","    Log in page","    \"\"\"","    if request.method == 'GET':","        return render_template('login.html')","    ","    elif request.method == \"POST\":","        ","        username = request.form[\"username\"]","        password = request.form[\"password\"]","        #hashedPassword = _hash_password(password)","","        #cursor = g.db.cursor()","        #Parametetrize SQL queries to prevent sql injection","        try:","            query = \"SELECT id from user WHERE username = ? AND password = ?\"","            cursor = g.db.execute(query, (username, password))","            #cursor = g.db.execute(query, (username, hashedPassword))","            results = cursor.fetchall()","            user_id = results[0][0] # <------","            session[\"logged_in\"] = True","            session[\"user_id\"] = user_id","            session[\"username\"] = username","            return redirect(\"/own_feed/\")","            #return \"your user id is {}\".format(id)","        except:","            return redirect(\"/login/\")","            # return \"you are wrong {}\".format(results)","","# @login_required","@app.route(\"/own_feed/\", methods = [\"GET\", \"POST\"])","def own_feed():","    if request.method == 'GET':","        query = \"SELECT id, created, content FROM tweet WHERE user_id = ? ORDER BY created desc\"","        cursor = g.db.execute(query, (session['user_id'],))","        tweets = _retrieve_tweets(session['user_id'])","        return render_template('own_feed.html', tweets=tweets)","","def _retrieve_tweets(user_id):","    query = \"SELECT id, created, content FROM tweet WHERE user_id = ? ORDER BY created desc\"","    cursor = g.db.execute(query, (user_id,))","    tweets = [dict(user_id = row[0], created = row[1], content = row[2]) for row in cursor.fetchall()]","    return tweets","    ","@app.route(\"/other_feed/\", methods = ['GET', 'POST'])","def other_feed():","    if request.method == 'GET':","        return render_template('other_feed.html')","    ","@app.route(\"/logout/\")","def logout():","    session.pop","    ","","","@app.route('/')","#@login_required()","def homepage():","    return \"Hello world\"","","","if __name__ == \"__main__\":","    app.run()"]}]]},"ace":{"folds":[],"scrolltop":61.11116647720337,"scrollleft":0,"selection":{"start":{"row":56,"column":12},"end":{"row":56,"column":12},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":4,"state":"start","mode":"ace/mode/python"}},"timestamp":1469779639609,"hash":"33734785974b3975171eade51768fc4fcd7beff4"}